{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM7l94WYgHyix0HQYCEoTDt"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Clase Género:\n","Es el atributo más adecuado para considerar como clase objetivo en este dataset, ya que es categórico y puede ser el resultado que deseas predecir en función de los otros atributos (Altura, Peso, Talla y Edad)."],"metadata":{"id":"2ynKo0vF67Ax"}},{"cell_type":"code","source":["from google.colab import drive\n","\n","# Montar Google Drive\n","drive.mount('/content/drive')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g8kG5iu55NYb","executionInfo":{"status":"ok","timestamp":1728219284347,"user_tz":240,"elapsed":20924,"user":{"displayName":"Alakir Meneses peres","userId":"09853550789562380167"}},"outputId":"bdb08e43-bca4-4f9a-e469-be91ba5bcebb"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"evQYoguZ49zM","executionInfo":{"status":"ok","timestamp":1728219783904,"user_tz":240,"elapsed":286,"user":{"displayName":"Alakir Meneses peres","userId":"09853550789562380167"}},"outputId":"12f5ae5b-ef18-4c14-ea04-d4226940fc6f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['ID', 'Altura', 'Peso', 'Talla', 'Edad', 'Genero'], dtype='object')\n","Entropía Total: 1.0\n","Ganancia de Información para Altura: 1.0\n","Ganancia de Información para Edad: 1.0\n","Ganancia de Información para ID: 1.0\n","Ganancia de Información para Peso: 1.0\n","Ganancia de Información para Talla: 0.7245112497836532\n","\n","Resultados de Ganancia de Información:\n","Altura: 1.0\n","Edad: 1.0\n","ID: 1.0\n","Peso: 1.0\n","Talla: 0.7245112497836532\n"]}],"source":["import pandas as pd\n","import numpy as np\n","\n","# Cargar el dataset\n","df = pd.read_csv('/content/drive/My Drive/354/primer_parcial/datos.csv')\n","\n","# Imprimir nombres de las columnas\n","print(df.columns)\n","\n","# Función para calcular la entropía\n","def calcular_entropia(data, clase):\n","    valores, conteos = np.unique(data[clase], return_counts=True)\n","    probabilidad = conteos / len(data)\n","    entropia = -np.sum(probabilidad * np.log2(probabilidad))\n","    return entropia\n","\n","# Cálculo de la entropía total del dataset\n","clase_objetivo = 'Genero'\n","entropia_total = calcular_entropia(df, clase_objetivo)\n","print(f'Entropía Total: {entropia_total}')\n","\n","# Función para calcular la ganancia de información\n","def ganancia_informacion(data, atributo, clase):\n","    valores, conteos = np.unique(data[atributo], return_counts=True)\n","    probabilidad_total = conteos / len(data)\n","\n","    entropia_condicional = 0\n","    for i, valor in enumerate(valores):\n","        sub_data = data[data[atributo] == valor]\n","        entropia_sub = calcular_entropia(sub_data, clase)\n","        entropia_condicional += probabilidad_total[i] * entropia_sub\n","\n","    ganancia = calcular_entropia(data, clase) - entropia_condicional\n","    return ganancia\n","\n","# Calcular la ganancia de información para todos los atributos\n","resultados_ganancia = {}\n","atributos = df.columns.difference([clase_objetivo])  # Todos los atributos excepto la clase objetivo\n","\n","for atributo in atributos:\n","    ganancia = ganancia_informacion(df, atributo, clase_objetivo)\n","    resultados_ganancia[atributo] = ganancia\n","    print(f'Ganancia de Información para {atributo}: {ganancia}')\n","\n","# Imprimir resultados de ganancia de información\n","print(\"\\nResultados de Ganancia de Información:\")\n","for atributo, ganancia in resultados_ganancia.items():\n","    print(f\"{atributo}: {ganancia}\")\n"]},{"cell_type":"markdown","source":["#Analisis:\n","**Entropía Total**: 1.0\n","\n","Indica diversidad máxima en la variable objetivo (Género), sugiriendo incertidumbre al predecir.\n","Ganancia de Información (GI):\n","\n","**Altura:** 1.0 - Perfecta para predecir el género.\n","\n","**Edad:** 1.0 - También perfecta para la predicción.\n","\n","**Peso:** 1.0 - Permite predecir el género con precisión.\n","\n","**ID:** 1.0 - No relevante como predictor; solo es un identificador único.\n","\n","**Talla:** 0.7245 - Menos informativa que los otros atributos; útil pero no tan precisa.\n","\n","#Interpretación\n","\n","**Atributos más Informativos:** Altura, Edad y Peso son los más relevantes para clasificar el género.\n","\n","**Atributo Menos Informativo:** Talla, aunque útil, no separa tan bien las clases.\n","\n","**ID:** No debe usarse en modelos de predicción."],"metadata":{"id":"nwISaNGc7mnz"}}]}